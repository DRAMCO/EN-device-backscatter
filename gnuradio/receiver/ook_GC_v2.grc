options:
  parameters:
    author: Gilles Callebaut
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: top_block
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: ''
    window_size: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: baud_rate
  id: variable
  parameters:
    comment: ''
    value: 1E3
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [264, 336.0]
    rotation: 0
    state: true
- name: channel_freq
  id: variable
  parameters:
    comment: ''
    value: 910E6+521.7E3-1.44E3
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 360.0]
    rotation: 0
    state: enabled
- name: cutoff_freq
  id: variable
  parameters:
    comment: ''
    value: baud_rate*5
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [160, 340.0]
    rotation: 0
    state: enabled
- name: decimation
  id: variable
  parameters:
    comment: ''
    value: int((samp_rate/baud_rate)//sps)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [432, 468.0]
    rotation: 0
    state: true
- name: freq_offset
  id: variable
  parameters:
    comment: ''
    value: 20E3
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 452.0]
    rotation: 0
    state: true
- name: lowpass_filter
  id: variable
  parameters:
    comment: ''
    value: firdes.low_pass(1, samp_rate, cutoff_freq, transition_width, window.WIN_HAMMING,
      6.76)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [224, 484.0]
    rotation: 0
    state: enabled
- name: rf_gain
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: ''
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0'
    step: '1'
    stop: '100'
    value: '10'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [192, 8.0]
    rotation: 0
    state: true
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: 1E6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 116]
    rotation: 0
    state: enabled
- name: sps
  id: variable
  parameters:
    comment: ''
    value: '100'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [96, 580.0]
    rotation: 0
    state: true
- name: transition_width
  id: variable
  parameters:
    comment: ''
    value: 1E3
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 280.0]
    rotation: 0
    state: enabled
- name: tune_freq
  id: variable
  parameters:
    comment: ''
    value: channel_freq - freq_offset
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [0, 208.0]
    rotation: 0
    state: enabled
- name: analog_pwr_squelch_xx_0
  id: analog_pwr_squelch_xx
  parameters:
    affinity: ''
    alias: ''
    alpha: 1e-4
    comment: ''
    gate: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    ramp: 80*sps
    threshold: '-10'
    type: float
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1408, 548.0]
    rotation: 0
    state: disabled
- name: analog_pwr_squelch_xx_0_0
  id: analog_pwr_squelch_xx
  parameters:
    affinity: ''
    alias: ''
    alpha: 1e-4
    comment: ''
    gate: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    ramp: int(10*samp_rate)
    threshold: '-10'
    type: complex
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [600, 140.0]
    rotation: 0
    state: bypassed
- name: band_pass_filter_0
  id: band_pass_filter
  parameters:
    affinity: ''
    alias: ''
    beta: '6.76'
    comment: ''
    decim: decimation
    gain: '1'
    high_cutoff_freq: cutoff_freq+freq_offset
    interp: '1'
    low_cutoff_freq: freq_offset-cutoff_freq
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    type: fir_filter_ccc
    width: transition_width
    win: window.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [720, 292.0]
    rotation: 0
    state: enabled
- name: blocks_char_to_float_0
  id: blocks_char_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1528, 208.0]
    rotation: 0
    state: disabled
- name: blocks_char_to_float_1
  id: blocks_char_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2216, 544.0]
    rotation: 0
    state: disabled
- name: blocks_char_to_float_1_0
  id: blocks_char_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1520, 392.0]
    rotation: 0
    state: disabled
- name: blocks_char_to_float_1_1
  id: blocks_char_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1248, 432.0]
    rotation: 0
    state: disabled
- name: blocks_char_to_short_0
  id: blocks_char_to_short
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2280, 728.0]
    rotation: 0
    state: disabled
- name: blocks_complex_to_mag_0
  id: blocks_complex_to_mag
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1032, 464.0]
    rotation: 0
    state: disabled
- name: blocks_complex_to_mag_squared_0
  id: blocks_complex_to_mag_squared
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [680, 552.0]
    rotation: 0
    state: disabled
- name: blocks_complex_to_mag_squared_0_0
  id: blocks_complex_to_mag_squared
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [744, 200.0]
    rotation: 0
    state: disabled
- name: blocks_file_sink_0
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: C:\Users\Calle\OneDrive\Documenten\GitHub\EN-device-backscatter\gnuradio\receiver\rx_file.data
    type: complex
    unbuffered: 'False'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [808, 780.0]
    rotation: 0
    state: enabled
- name: blocks_file_sink_1
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: C:\Users\Calle\OneDrive\Documenten\output.txt
    type: short
    unbuffered: 'False'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2424, 760.0]
    rotation: 0
    state: disabled
- name: blocks_float_to_char_0
  id: blocks_float_to_char
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1512, 464.0]
    rotation: 0
    state: disabled
- name: blocks_keep_one_in_n_0
  id: blocks_keep_one_in_n
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    n: '1'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1744, 608.0]
    rotation: 0
    state: disabled
- name: blocks_multiply_xx_0
  id: blocks_multiply_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1792, 288.0]
    rotation: 0
    state: disabled
- name: blocks_multiply_xx_0_0
  id: blocks_multiply_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1736, 376.0]
    rotation: 0
    state: disabled
- name: digital_correlate_access_code_tag_xx_0
  id: digital_correlate_access_code_tag_xx
  parameters:
    access_code: '110101010100100000001001000000001001101010111'
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    tagname: preamble
    threshold: '0'
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1856, 516.0]
    rotation: 0
    state: disabled
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nimport numpy as np\n\n\nclass blk(gr.sync_block): \
      \ # other base classes are basic_block, decim_block, interp_block\n    \"\"\"\
      Embedded Python Block example - a simple multiply const\"\"\"\n\n    def __init__(self,\
      \ sps=1.0):  # only default arguments here\n        \"\"\"arguments to this\
      \ function show up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\
      \ \n            self,\n            name='OOK threshold',   # will show up in\
      \ GRC\n            in_sig=[np.float32],\n            out_sig=[np.uint8, np.float32,\
      \ np.float32, np.float32]\n        )\n        # if an attribute with the same\
      \ name as a parameter is found,\n        # a callback is registered (properties\
      \ work, too).\n        self.avg = -1.0\n        self.max = 0.0\n        self.min\
      \ = 1.0\n        self.sps = sps\n\n    def forecast(self, noutput_items, ninputs):\n\
      \        # ensure 100 symbols before processing\n        return [int(self.sps*100)\
      \ for ii in range(ninputs)]\n\n\n    def work(self, input_items, output_items):\n\
      \        \"\"\"example: multiply with constant\"\"\"\n\n        if not len(input_items[0])\
      \ > 0:\n            return 0\n\n\n        _max = np.max(input_items[0])\n  \
      \      _min = np.min(input_items[0])\n\n        self.max += _max\n        self.max\
      \ /=2\n\n        self.min += _min\n        self.min /=2\n\n\n        threshold\
      \ = (self.max + self.min) * 0.2\n\n        results = np.ones(len(input_items[0]),\
      \ dtype=np.uint8)\n        results[input_items[0] < threshold] = 0\n\n     \
      \   output_items[0][:] = results\n        output_items[1][:] = self.max\n  \
      \      output_items[2][:] = self.min\n        output_items[3][:] = threshold\n\
      \        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    sps: sps
  states:
    _io_cache: ('OOK threshold', 'blk', [('sps', '1.0')], [('0', 'float', 1)], [('0',
      'byte', 1), ('1', 'float', 1), ('2', 'float', 1), ('3', 'float', 1)], 'Embedded
      Python Block example - a simple multiply const', ['sps'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1112, 544.0]
    rotation: 0
    state: disabled
- name: epy_block_1
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\n\n\nclass blk(gr.sync_block):  # other base classes\
      \ are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python Block\
      \ example - a simple multiply const\"\"\"\n\n    def __init__(self):  # only\
      \ default arguments here\n        \"\"\"arguments to this function show up as\
      \ parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n            self,\n\
      \            name='Symbol detector',   # will show up in GRC\n            in_sig=[np.uint8],\n\
      \            out_sig=[np.uint8]\n        )\n        self.set_history(2) # The\
      \ comand set_history(x) appends the previous x-1 items to the input buffer (input_items),\
      \ while the x'th item is the current value.\n\n    def work(self, input_items,\
      \ output_items):\n        \"\"\"example: multiply with constant\"\"\"\n    \
      \    edges = np.diff(input_items[0])**2\n        output_items[0][:] = edges\n\
      \n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Symbol detector', 'blk', [], [('0', 'byte', 1)], [('0', 'byte', 1)],
      'Embedded Python Block example - a simple multiply const', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1320, 256.0]
    rotation: 0
    state: disabled
- name: epy_block_1_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\n\n\nclass blk(gr.basic_block):  # other base classes\
      \ are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python Block\
      \ example - a simple multiply const\"\"\"\n\n    def __init__(self, sps=10,\
      \ frame_size=10):  # only default arguments here\n        \"\"\"arguments to\
      \ this function show up as parameters in GRC\"\"\"\n        gr.basic_block.__init__(\n\
      \            self,\n            name='Gate till edge',   # will show up in GRC\n\
      \            in_sig=[np.uint8],\n            out_sig=[np.uint8]\n        )\n\
      \        self.sps = sps\n        self.record_ongoing = False\n        self.remainig_samples\
      \ = 0\n        self.trigger_detected = False\n\n    def forecast(self, noutput_items,\
      \ ninputs):\n        # ensure 5 symbols before processing\n        return [int(self.sps*5)\
      \ for ii in range(ninputs)]\n\n    def find_first(item, vec):\n        for i\
      \ in range(len(vec)):\n            if item == vec[i]:\n                return\
      \ i\n        return -1 \n\n    def general_work(self, input_items, output_items):\n\
      \        samples = input_items[0]\n\n        output_samples = []\n\n       \
      \ # if 0->1 detected start new recording if not already done so, and output\
      \ frame_size*self.sps\n        if self.record_ongoing and self.remainig_samples\
      \ > 0: #todo ensure the remaing samples ar larger then input_items\n       \
      \     output_samples = samples[:self.remainig_samples]\n            self.remainig_samples\
      \ = 0\n            self.record_ongoing = False\n\n        if not self.record_ongoing:\n\
      \            # check if new positive edge is found\n            edge_idx = find_first(1,\
      \ np.diff(samples)) + 1 # first where diff is 0->1, ie is 1 is positive edge\
      \ and +1 bcs 1 starts at edge+1\n\n            if edge_idx > 0: # found an edge\n\
      \                self.record_ongoing = True\n\n                num_remaining_samples\
      \ = len(samples) - edge_idx\n\n                if num_remaining_samples < frame_size*self.sps:\n\
      \                    self.remainig_samples = frame_size*self.sps-num_remaining_samples\n\
      \                    num_samples_to_process = frame_size*self.sps - self.remainig_samples\n\
      \                else:\n                    num_samples_to_process = frame_size*self.sps\n\
      \                    self.record_ongoing = False\n\n                output_samples\
      \ = samples[edge_idx:edge_idx+num_samples_to_process]\n\n\n        if len(output_items[0])\
      \ < len(output_samples): \n            output_samples = output_samples[:len(output_items[0])]\n\
      \n        self.consume(0, len(samples))\n\n        return len(output_samples)\n"
    affinity: ''
    alias: ''
    comment: ''
    frame_size: '80'
    maxoutbuf: '0'
    minoutbuf: '0'
    sps: sps
  states:
    _io_cache: ('Gate till edge', 'blk', [('sps', '10'), ('frame_size', '10')], [('0',
      'byte', 1)], [('0', 'byte', 1)], 'Embedded Python Block example - a simple multiply
      const', ['sps'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1472, 664.0]
    rotation: 0
    state: disabled
- name: epy_block_1_0_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\n\n\nclass blk(gr.decim_block):  # other base classes\
      \ are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python Block\
      \ example - a simple multiply const\"\"\"\n\n    def __init__(self, decim_rate=10,\
      \ sps=10):  # only default arguments here\n        \"\"\"arguments to this function\
      \ show up as parameters in GRC\"\"\"\n        gr.decim_block.__init__(\n   \
      \         self,\n            name='Median',   # will show up in GRC\n      \
      \      in_sig=[np.uint8],\n            out_sig=[np.uint8],\n            decim\
      \ = decim_rate)\n        self.sps = sps\n        self.set_relative_rate(1.0/decim_rate)\n\
      \        self.decimation = decim_rate\n\n    # def forecast(self, noutput_items,\
      \ ninputs):\n    #     # ensure 1 symbols before processing\n    #     return\
      \ [int(self.sps) for ii in range(ninputs)]\n\n    def work(self, input_items,\
      \ output_items):\n        samples = input_items[0]\n\n        N = len(samples)\n\
      \n        num_symbols = N//self.sps\n        \n        samples_consumed = samples[:num_symbols*self.sps]\n\
      \n        bits_per_symbol = np.split(samples_consumed, num_symbols)\n\n    \
      \    symbols = [np.median(bits_per_symb) for bits_per_symb in bits_per_symbol]\n\
      \n        output_items[0][:] = symbols\n\n        # self.consume(0, len(samples_consumed))\n\
      \n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    decim_rate: sps
    maxoutbuf: '0'
    minoutbuf: '0'
    sps: sps
  states:
    _io_cache: ('Median', 'blk', [('decim_rate', '10'), ('sps', '10')], [('0', 'byte',
      1)], [('0', 'byte', 1)], 'Embedded Python Block example - a simple multiply
      const', ['sps'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1688, 488.0]
    rotation: 0
    state: disabled
- name: epy_block_2
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\n\n\nclass blk(gr.basic_block):  # other base classes\
      \ are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python Block\
      \ example - a simple multiply const\"\"\"\n\n    def __init__(self, samp_rate=1E6,\
      \ sps=10):  # only default arguments here\n        \"\"\"arguments to this function\
      \ show up as parameters in GRC\"\"\"\n        gr.basic_block.__init__(\n   \
      \         self,\n            name='OOK Demodulator',   # will show up in GRC\n\
      \            in_sig=[np.uint8],\n            out_sig=[np.uint8]\n        )\n\
      \n        # amount of samples per symbol\n        self.sps = sps\n        self.threshold\
      \ = samp_rate / sps\n        # amount of samples that can be wrong when counting\
      \ the 1's and 0's\n        self.error_threshold = self.threshold // 4\n\n  \
      \      self.packet = ''\n        self.count_1 = 0 # Counts consecutive 1's\n\
      \        self.count_0 = 0 # Counts consecutive 0's\n        self.sample_1_complete\
      \ = False\n        self.sample_0_complete = False\n        self.first_trigger\
      \ = False\n\n    def forecast(self, noutput_items, ninputs):\n        # ensure\
      \ 10 symbols before processing\n        return [int(self.sps*10) for ii in range(ninputs)]\n\
      \n    def general_work(self, input_items, output_items):\n        samples =\
      \ input_items[0]\n\n        num_samples = len(samples)\n\n        samples =\
      \ np.array(samples)\n\n        symbols = []\n\n        sample_idx = 0\n\n  \
      \      if num_samples == 0:\n            return 0\n\n        # wait till first\
      \ trigger occurs, and start symbol timing from that\n        if not self.first_trigger:\n\
      \            signal_detected = np.sum(np.diff(input_items[0]) == 1) # num positive\
      \ edge triggers\n            if signal_detected:\n                sample_idx\
      \ = np.where(np.diff(input_items[0]) == 1)[0][0]\n                if num_samples-sample_idx\
      \ > self.sps:\n                    self.first_trigger = True\n\n        if not\
      \ self.first_trigger:\n            num_remaining_symbols = (num_samples - sample_idx)//self.sps\n\
      \            print(num_remaining_symbols)\n            if num_remaining_symbols\
      \ > 0:\n                # only process the remaining symbols and leave the rest\
      \ for next block iteration\n                num_processed_samples = sample_idx+num_remaining_symbols*self.sps\n\
      \                # by not processing the last remaing bits, we essentially put\
      \ the next timing trigger on the first bit in the next block iteration\n   \
      \             samples_to_process = samples[sample_idx:num_remaining_symbols*self.sps]\n\
      \                bits_per_symbol = np.split(samples_to_process, num_remaining_symbols)\n\
      \                symbols = [np.median(s) for s in bits_per_symbol]\n\n     \
      \           self.consume(0, num_processed_samples)\n                self.produce(0,\
      \ len(symbols))\n                output_items[0][:len(symbols)] = symbols\n\
      \            else:\n                self.consume(0, 0)\n                self.produce(0,\
      \ 0)\n\n        else:\n            self.consume(0, 0)\n\n        return len(symbols)\n\
      \n\n    def count_samples(self, sample1, sample2):\n        if(sample1 == 1):\n\
      \            self.count_1 += 1\n            if(sample2 == 0):\n            \
      \    self.sample_1_complete = True \n        elif(sample1 == 0):\n         \
      \   self.count_0 += 1\n            if(sample2 == 1):\n                self.sample_0_complete\
      \ = True \n\n    \n    def process_sample(self, bit, count):\n        if(count\
      \ > self.threshold - self.error_threshold and count < self.threshold + self.error_threshold):\n\
      \            return [bit], False\n        elif count < (self.threshold - self.error_threshold):\n\
      \            # ignore \n             return None, True\n        else:\n    \
      \        num_bits =  int(count//(self.threshold - self.threshold//10))\n   \
      \         return [bit]*num_bits, False\n\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate/decimation
    sps: sps
  states:
    _io_cache: ('OOK Demodulator', 'blk', [('samp_rate', '1000000.0'), ('sps', '10')],
      [('0', 'byte', 1)], [('0', 'byte', 1)], 'Embedded Python Block example - a simple
      multiply const', ['sps'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1464, 524.0]
    rotation: 0
    state: disabled
- name: fosphor_glfw_sink_c_0
  id: fosphor_glfw_sink_c
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    freq_center: channel_freq
    freq_span: samp_rate/decimation
    maxoutbuf: '0'
    minoutbuf: '0'
    wintype: window.WIN_BLACKMAN_hARRIS
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1032, 196.0]
    rotation: 0
    state: disabled
- name: fosphor_glfw_sink_c_0_0
  id: fosphor_glfw_sink_c
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    freq_center: channel_freq
    freq_span: samp_rate/decimation
    maxoutbuf: '0'
    minoutbuf: '0'
    wintype: window.WIN_BLACKMAN_hARRIS
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [896, 148.0]
    rotation: 0
    state: disabled
- name: fosphor_glfw_sink_c_0_0_0
  id: fosphor_glfw_sink_c
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    freq_center: tune_freq
    freq_span: samp_rate
    maxoutbuf: '0'
    minoutbuf: '0'
    wintype: window.WIN_BLACKMAN_hARRIS
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [568, 92.0]
    rotation: 0
    state: disabled
- name: freq_xlating_fir_filter_lp
  id: freq_xlating_fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    center_freq: ''
    comment: ''
    decim: decimation
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    taps: lowpass_filter
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [496, 292.0]
    rotation: 0
    state: disabled
- name: qtgui_const_sink_x_0
  id: qtgui_const_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: '"blue"'
    color10: '"red"'
    color2: '"red"'
    color3: '"red"'
    color4: '"red"'
    color5: '"red"'
    color6: '"red"'
    color7: '"red"'
    color8: '"red"'
    color9: '"red"'
    comment: ''
    grid: 'False'
    gui_hint: ''
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '0'
    marker10: '0'
    marker2: '0'
    marker3: '0'
    marker4: '0'
    marker5: '0'
    marker6: '0'
    marker7: '0'
    marker8: '0'
    marker9: '0'
    name: '""'
    nconnections: '1'
    size: '1024'
    style1: '0'
    style10: '0'
    style2: '0'
    style3: '0'
    style4: '0'
    style5: '0'
    style6: '0'
    style7: '0'
    style8: '0'
    style9: '0'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    xmax: '2'
    xmin: '-2'
    ymax: '2'
    ymin: '-2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1544, 724.0]
    rotation: 0
    state: disabled
- name: qtgui_freq_sink_x_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    norm_window: 'False'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1800, 128.0]
    rotation: 0
    state: true
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    color1: black
    color10: dark blue
    color2: red
    color3: magenta
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'True'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Power
    label10: Signal 10
    label2: High
    label3: Low
    label4: Threshold
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '0'
    marker10: '-1'
    marker2: '0'
    marker3: '0'
    marker4: '0'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '4'
    size: '1024'
    srate: baud_rate*sps
    stemplot: 'False'
    style1: '0'
    style10: '1'
    style2: '0'
    style3: '0'
    style4: '0'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '0.0004'
    ymin: '0'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1928, 672.0]
    rotation: 0
    state: disabled
- name: qtgui_time_sink_x_0_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'True'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '"Na"'
    nconnections: '1'
    size: '1024'
    srate: baud_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '0'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2384, 372.0]
    rotation: 0
    state: disabled
- name: qtgui_time_sink_x_0_1
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    color1: black
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'True'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Power
    label10: Signal 10
    label2: High
    label3: Low
    label4: Threshold
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: int(samp_rate)
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1144, 300.0]
    rotation: 0
    state: disabled
- name: qtgui_time_sink_x_1
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'True'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Symbol detected
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '6'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '"RX magn"'
    nconnections: '3'
    size: int(samp_rate/decimation)
    srate: samp_rate/decimation
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1992, 212.0]
    rotation: 0
    state: disabled
- name: qtgui_time_sink_x_1_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '"RX magn"'
    nconnections: '1'
    size: '1024'
    srate: (samp_rate/decimation)/sps
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2216, 276.0]
    rotation: 0
    state: disabled
- name: qtgui_waterfall_sink_x_0
  id: qtgui_waterfall_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    axislabels: 'True'
    bw: samp_rate/decimation
    color1: '0'
    color10: '0'
    color2: '0'
    color3: '0'
    color4: '0'
    color5: '0'
    color6: '0'
    color7: '0'
    color8: '0'
    color9: '0'
    comment: ''
    fc: '0'
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    int_max: '10'
    int_min: '-140'
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    showports: 'False'
    type: complex
    update_time: '0.10'
    wintype: window.WIN_BLACKMAN_hARRIS
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1000, 112.0]
    rotation: 0
    state: disabled
- name: qtgui_waterfall_sink_x_1
  id: qtgui_waterfall_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    axislabels: 'True'
    bw: samp_rate/decimation
    color1: '0'
    color10: '0'
    color2: '0'
    color3: '0'
    color4: '0'
    color5: '0'
    color6: '0'
    color7: '0'
    color8: '0'
    color9: '0'
    comment: ''
    fc: tune_freq
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    int_max: '10'
    int_min: '-140'
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    showports: 'False'
    type: complex
    update_time: '0.10'
    wintype: window.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1560, 12.0]
    rotation: 0
    state: enabled
- name: uhd_usrp_source_0
  id: uhd_usrp_source
  parameters:
    affinity: ''
    alias: ''
    ant0: '"RX2"'
    ant1: '"RX2"'
    ant10: '"RX2"'
    ant11: '"RX2"'
    ant12: '"RX2"'
    ant13: '"RX2"'
    ant14: '"RX2"'
    ant15: '"RX2"'
    ant16: '"RX2"'
    ant17: '"RX2"'
    ant18: '"RX2"'
    ant19: '"RX2"'
    ant2: '"RX2"'
    ant20: '"RX2"'
    ant21: '"RX2"'
    ant22: '"RX2"'
    ant23: '"RX2"'
    ant24: '"RX2"'
    ant25: '"RX2"'
    ant26: '"RX2"'
    ant27: '"RX2"'
    ant28: '"RX2"'
    ant29: '"RX2"'
    ant3: '"RX2"'
    ant30: '"RX2"'
    ant31: '"RX2"'
    ant4: '"RX2"'
    ant5: '"RX2"'
    ant6: '"RX2"'
    ant7: '"RX2"'
    ant8: '"RX2"'
    ant9: '"RX2"'
    bw0: '0'
    bw1: '0'
    bw10: '0'
    bw11: '0'
    bw12: '0'
    bw13: '0'
    bw14: '0'
    bw15: '0'
    bw16: '0'
    bw17: '0'
    bw18: '0'
    bw19: '0'
    bw2: '0'
    bw20: '0'
    bw21: '0'
    bw22: '0'
    bw23: '0'
    bw24: '0'
    bw25: '0'
    bw26: '0'
    bw27: '0'
    bw28: '0'
    bw29: '0'
    bw3: '0'
    bw30: '0'
    bw31: '0'
    bw4: '0'
    bw5: '0'
    bw6: '0'
    bw7: '0'
    bw8: '0'
    bw9: '0'
    center_freq0: tune_freq
    center_freq1: '0'
    center_freq10: '0'
    center_freq11: '0'
    center_freq12: '0'
    center_freq13: '0'
    center_freq14: '0'
    center_freq15: '0'
    center_freq16: '0'
    center_freq17: '0'
    center_freq18: '0'
    center_freq19: '0'
    center_freq2: '0'
    center_freq20: '0'
    center_freq21: '0'
    center_freq22: '0'
    center_freq23: '0'
    center_freq24: '0'
    center_freq25: '0'
    center_freq26: '0'
    center_freq27: '0'
    center_freq28: '0'
    center_freq29: '0'
    center_freq3: '0'
    center_freq30: '0'
    center_freq31: '0'
    center_freq4: '0'
    center_freq5: '0'
    center_freq6: '0'
    center_freq7: '0'
    center_freq8: '0'
    center_freq9: '0'
    clock_rate: 0e0
    clock_source0: ''
    clock_source1: ''
    clock_source2: ''
    clock_source3: ''
    clock_source4: ''
    clock_source5: ''
    clock_source6: ''
    clock_source7: ''
    comment: ''
    dc_offs0: 0+0j
    dc_offs1: 0+0j
    dc_offs10: 0+0j
    dc_offs11: 0+0j
    dc_offs12: 0+0j
    dc_offs13: 0+0j
    dc_offs14: 0+0j
    dc_offs15: 0+0j
    dc_offs16: 0+0j
    dc_offs17: 0+0j
    dc_offs18: 0+0j
    dc_offs19: 0+0j
    dc_offs2: 0+0j
    dc_offs20: 0+0j
    dc_offs21: 0+0j
    dc_offs22: 0+0j
    dc_offs23: 0+0j
    dc_offs24: 0+0j
    dc_offs25: 0+0j
    dc_offs26: 0+0j
    dc_offs27: 0+0j
    dc_offs28: 0+0j
    dc_offs29: 0+0j
    dc_offs3: 0+0j
    dc_offs30: 0+0j
    dc_offs31: 0+0j
    dc_offs4: 0+0j
    dc_offs5: 0+0j
    dc_offs6: 0+0j
    dc_offs7: 0+0j
    dc_offs8: 0+0j
    dc_offs9: 0+0j
    dc_offs_enb0: auto
    dc_offs_enb1: default
    dc_offs_enb10: default
    dc_offs_enb11: default
    dc_offs_enb12: default
    dc_offs_enb13: default
    dc_offs_enb14: default
    dc_offs_enb15: default
    dc_offs_enb16: default
    dc_offs_enb17: default
    dc_offs_enb18: default
    dc_offs_enb19: default
    dc_offs_enb2: default
    dc_offs_enb20: default
    dc_offs_enb21: default
    dc_offs_enb22: default
    dc_offs_enb23: default
    dc_offs_enb24: default
    dc_offs_enb25: default
    dc_offs_enb26: default
    dc_offs_enb27: default
    dc_offs_enb28: default
    dc_offs_enb29: default
    dc_offs_enb3: default
    dc_offs_enb30: default
    dc_offs_enb31: default
    dc_offs_enb4: default
    dc_offs_enb5: default
    dc_offs_enb6: default
    dc_offs_enb7: default
    dc_offs_enb8: default
    dc_offs_enb9: default
    dev_addr: '""'
    dev_args: ''
    gain0: rf_gain
    gain1: '0'
    gain10: '0'
    gain11: '0'
    gain12: '0'
    gain13: '0'
    gain14: '0'
    gain15: '0'
    gain16: '0'
    gain17: '0'
    gain18: '0'
    gain19: '0'
    gain2: '0'
    gain20: '0'
    gain21: '0'
    gain22: '0'
    gain23: '0'
    gain24: '0'
    gain25: '0'
    gain26: '0'
    gain27: '0'
    gain28: '0'
    gain29: '0'
    gain3: '0'
    gain30: '0'
    gain31: '0'
    gain4: '0'
    gain5: '0'
    gain6: '0'
    gain7: '0'
    gain8: '0'
    gain9: '0'
    gain_type0: default
    gain_type1: default
    gain_type10: default
    gain_type11: default
    gain_type12: default
    gain_type13: default
    gain_type14: default
    gain_type15: default
    gain_type16: default
    gain_type17: default
    gain_type18: default
    gain_type19: default
    gain_type2: default
    gain_type20: default
    gain_type21: default
    gain_type22: default
    gain_type23: default
    gain_type24: default
    gain_type25: default
    gain_type26: default
    gain_type27: default
    gain_type28: default
    gain_type29: default
    gain_type3: default
    gain_type30: default
    gain_type31: default
    gain_type4: default
    gain_type5: default
    gain_type6: default
    gain_type7: default
    gain_type8: default
    gain_type9: default
    iq_imbal0: 0+0j
    iq_imbal1: 0+0j
    iq_imbal10: 0+0j
    iq_imbal11: 0+0j
    iq_imbal12: 0+0j
    iq_imbal13: 0+0j
    iq_imbal14: 0+0j
    iq_imbal15: 0+0j
    iq_imbal16: 0+0j
    iq_imbal17: 0+0j
    iq_imbal18: 0+0j
    iq_imbal19: 0+0j
    iq_imbal2: 0+0j
    iq_imbal20: 0+0j
    iq_imbal21: 0+0j
    iq_imbal22: 0+0j
    iq_imbal23: 0+0j
    iq_imbal24: 0+0j
    iq_imbal25: 0+0j
    iq_imbal26: 0+0j
    iq_imbal27: 0+0j
    iq_imbal28: 0+0j
    iq_imbal29: 0+0j
    iq_imbal3: 0+0j
    iq_imbal30: 0+0j
    iq_imbal31: 0+0j
    iq_imbal4: 0+0j
    iq_imbal5: 0+0j
    iq_imbal6: 0+0j
    iq_imbal7: 0+0j
    iq_imbal8: 0+0j
    iq_imbal9: 0+0j
    iq_imbal_enb0: auto
    iq_imbal_enb1: default
    iq_imbal_enb10: default
    iq_imbal_enb11: default
    iq_imbal_enb12: default
    iq_imbal_enb13: default
    iq_imbal_enb14: default
    iq_imbal_enb15: default
    iq_imbal_enb16: default
    iq_imbal_enb17: default
    iq_imbal_enb18: default
    iq_imbal_enb19: default
    iq_imbal_enb2: default
    iq_imbal_enb20: default
    iq_imbal_enb21: default
    iq_imbal_enb22: default
    iq_imbal_enb23: default
    iq_imbal_enb24: default
    iq_imbal_enb25: default
    iq_imbal_enb26: default
    iq_imbal_enb27: default
    iq_imbal_enb28: default
    iq_imbal_enb29: default
    iq_imbal_enb3: default
    iq_imbal_enb30: default
    iq_imbal_enb31: default
    iq_imbal_enb4: default
    iq_imbal_enb5: default
    iq_imbal_enb6: default
    iq_imbal_enb7: default
    iq_imbal_enb8: default
    iq_imbal_enb9: default
    lo_export0: 'False'
    lo_export1: 'False'
    lo_export10: 'False'
    lo_export11: 'False'
    lo_export12: 'False'
    lo_export13: 'False'
    lo_export14: 'False'
    lo_export15: 'False'
    lo_export16: 'False'
    lo_export17: 'False'
    lo_export18: 'False'
    lo_export19: 'False'
    lo_export2: 'False'
    lo_export20: 'False'
    lo_export21: 'False'
    lo_export22: 'False'
    lo_export23: 'False'
    lo_export24: 'False'
    lo_export25: 'False'
    lo_export26: 'False'
    lo_export27: 'False'
    lo_export28: 'False'
    lo_export29: 'False'
    lo_export3: 'False'
    lo_export30: 'False'
    lo_export31: 'False'
    lo_export4: 'False'
    lo_export5: 'False'
    lo_export6: 'False'
    lo_export7: 'False'
    lo_export8: 'False'
    lo_export9: 'False'
    lo_source0: internal
    lo_source1: internal
    lo_source10: internal
    lo_source11: internal
    lo_source12: internal
    lo_source13: internal
    lo_source14: internal
    lo_source15: internal
    lo_source16: internal
    lo_source17: internal
    lo_source18: internal
    lo_source19: internal
    lo_source2: internal
    lo_source20: internal
    lo_source21: internal
    lo_source22: internal
    lo_source23: internal
    lo_source24: internal
    lo_source25: internal
    lo_source26: internal
    lo_source27: internal
    lo_source28: internal
    lo_source29: internal
    lo_source3: internal
    lo_source30: internal
    lo_source31: internal
    lo_source4: internal
    lo_source5: internal
    lo_source6: internal
    lo_source7: internal
    lo_source8: internal
    lo_source9: internal
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '1'
    num_mboards: '1'
    otw: ''
    rx_agc0: Disabled
    rx_agc1: Default
    rx_agc10: Default
    rx_agc11: Default
    rx_agc12: Default
    rx_agc13: Default
    rx_agc14: Default
    rx_agc15: Default
    rx_agc16: Default
    rx_agc17: Default
    rx_agc18: Default
    rx_agc19: Default
    rx_agc2: Default
    rx_agc20: Default
    rx_agc21: Default
    rx_agc22: Default
    rx_agc23: Default
    rx_agc24: Default
    rx_agc25: Default
    rx_agc26: Default
    rx_agc27: Default
    rx_agc28: Default
    rx_agc29: Default
    rx_agc3: Default
    rx_agc30: Default
    rx_agc31: Default
    rx_agc4: Default
    rx_agc5: Default
    rx_agc6: Default
    rx_agc7: Default
    rx_agc8: Default
    rx_agc9: Default
    samp_rate: samp_rate
    sd_spec0: ''
    sd_spec1: ''
    sd_spec2: ''
    sd_spec3: ''
    sd_spec4: ''
    sd_spec5: ''
    sd_spec6: ''
    sd_spec7: ''
    show_lo_controls: 'False'
    start_time: '-1.0'
    stream_args: ''
    stream_chans: '[]'
    sync: sync
    time_source0: ''
    time_source1: ''
    time_source2: ''
    time_source3: ''
    time_source4: ''
    time_source5: ''
    time_source6: ''
    time_source7: ''
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [240, 152.0]
    rotation: 0
    state: true
- name: zeromq_push_sink_0_0
  id: zeromq_push_sink
  parameters:
    address: tcp://127.0.0.1:5558
    affinity: ''
    alias: ''
    bind: 'True'
    comment: ''
    hwm: '-1'
    pass_tags: 'False'
    timeout: '100'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1304, 340.0]
    rotation: 0
    state: disabled

connections:
- [analog_pwr_squelch_xx_0, '0', blocks_float_to_char_0, '0']
- [analog_pwr_squelch_xx_0_0, '0', band_pass_filter_0, '0']
- [band_pass_filter_0, '0', blocks_complex_to_mag_0, '0']
- [band_pass_filter_0, '0', blocks_complex_to_mag_squared_0, '0']
- [band_pass_filter_0, '0', blocks_file_sink_0, '0']
- [band_pass_filter_0, '0', qtgui_const_sink_x_0, '0']
- [band_pass_filter_0, '0', qtgui_freq_sink_x_0, '0']
- [band_pass_filter_0, '0', qtgui_waterfall_sink_x_1, '0']
- [blocks_char_to_float_0, '0', blocks_multiply_xx_0, '0']
- [blocks_char_to_float_1, '0', qtgui_time_sink_x_0_0, '0']
- [blocks_char_to_float_1_0, '0', blocks_multiply_xx_0_0, '0']
- [blocks_char_to_float_1_1, '0', analog_pwr_squelch_xx_0, '0']
- [blocks_char_to_short_0, '0', blocks_file_sink_1, '0']
- [blocks_complex_to_mag_0, '0', epy_block_0, '0']
- [blocks_complex_to_mag_0, '0', qtgui_time_sink_x_0, '0']
- [blocks_complex_to_mag_0, '0', qtgui_time_sink_x_1, '0']
- [blocks_complex_to_mag_squared_0, '0', epy_block_0, '0']
- [blocks_complex_to_mag_squared_0, '0', qtgui_time_sink_x_0, '0']
- [blocks_complex_to_mag_squared_0, '0', zeromq_push_sink_0_0, '0']
- [blocks_complex_to_mag_squared_0_0, '0', qtgui_time_sink_x_0_1, '0']
- [blocks_float_to_char_0, '0', epy_block_1_0_0, '0']
- [blocks_keep_one_in_n_0, '0', digital_correlate_access_code_tag_xx_0, '0']
- [blocks_multiply_xx_0, '0', qtgui_time_sink_x_1, '1']
- [blocks_multiply_xx_0_0, '0', qtgui_time_sink_x_1, '2']
- [digital_correlate_access_code_tag_xx_0, '0', blocks_char_to_float_1, '0']
- [digital_correlate_access_code_tag_xx_0, '0', blocks_char_to_short_0, '0']
- [epy_block_0, '0', blocks_char_to_float_1_0, '0']
- [epy_block_0, '0', blocks_char_to_float_1_1, '0']
- [epy_block_0, '0', epy_block_1, '0']
- [epy_block_0, '0', epy_block_1_0, '0']
- [epy_block_0, '0', epy_block_2, '0']
- [epy_block_0, '1', blocks_multiply_xx_0, '1']
- [epy_block_0, '1', blocks_multiply_xx_0_0, '1']
- [epy_block_0, '1', qtgui_time_sink_x_0, '1']
- [epy_block_0, '2', qtgui_time_sink_x_0, '2']
- [epy_block_0, '3', qtgui_time_sink_x_0, '3']
- [epy_block_1, '0', blocks_char_to_float_0, '0']
- [epy_block_1_0, '0', blocks_keep_one_in_n_0, '0']
- [epy_block_1_0, '0', epy_block_1_0_0, '0']
- [epy_block_1_0_0, '0', digital_correlate_access_code_tag_xx_0, '0']
- [epy_block_2, '0', digital_correlate_access_code_tag_xx_0, '0']
- [freq_xlating_fir_filter_lp, '0', blocks_complex_to_mag_0, '0']
- [freq_xlating_fir_filter_lp, '0', blocks_complex_to_mag_squared_0, '0']
- [freq_xlating_fir_filter_lp, '0', blocks_file_sink_0, '0']
- [freq_xlating_fir_filter_lp, '0', fosphor_glfw_sink_c_0, '0']
- [freq_xlating_fir_filter_lp, '0', fosphor_glfw_sink_c_0_0, '0']
- [freq_xlating_fir_filter_lp, '0', qtgui_const_sink_x_0, '0']
- [freq_xlating_fir_filter_lp, '0', qtgui_freq_sink_x_0, '0']
- [freq_xlating_fir_filter_lp, '0', qtgui_time_sink_x_1, '0']
- [freq_xlating_fir_filter_lp, '0', qtgui_waterfall_sink_x_1, '0']
- [uhd_usrp_source_0, '0', analog_pwr_squelch_xx_0_0, '0']
- [uhd_usrp_source_0, '0', blocks_complex_to_mag_squared_0_0, '0']
- [uhd_usrp_source_0, '0', fosphor_glfw_sink_c_0_0_0, '0']
- [uhd_usrp_source_0, '0', freq_xlating_fir_filter_lp, '0']

metadata:
  file_format: 1
  grc_version: 3.10.7.0
